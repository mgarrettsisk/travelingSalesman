Problem 1 GUI Elements:

Canvas where squares and numbers are drawn
Text Area showing steps to completion

Start temperature input
End temperature input
Temperature Decrement
Iterations per decrement

Generate random arrangement button
Solve puzzle button



Design outline:

Current state -> examine each possible move (this is the iteration number)
	The heuristic used is total number of places each number is away from its intended position
	IF move doesn't reduce the value
	IF no choice minimizes the value THEN
		IF random number between 0 and 1 is greater than e^-Delta/T
			Then reject the bad move
		ELSE
			Accept the bad move
	THEN
		Accept all good moves

Then decrement the temperature (the initial, final, and decrement values provided)

Steps:

DETERMINE POSSIBLE MOVES

FOR EACH POSSIBLE MOVE:
    COMPUTE THE HEURISTIC VALUE OF POST-MOVE STATE
    COMPARE THE VALUE TO THE PRE-MOVE STATE
    IF (VALUE < PRE-MOVE STATE) THEN
        ACCEPT MOVE, AND MAKE STATE THE CURRENT STATE
    ELSE IF (VALUE >= PRE-MOVE STATE) THEN
        COMPUTE e^(-_Delta/T)
        COMPUTE RANDOM VALUE BETWEEN 0 AND 1
        IF (RANDOM VALUE IS LESS THAN e^(...)) THEN
            ACCEPT MOVE, AND MAKE STATE THE CURRENT STATE
        ELSE
            REJECT MOVE
        END IF
    END IF
END FOR


For traveling salesman:

Randomly connect all points in grid. Total distance of all edges is computed.

Randomly move


Randomly generate a list of targets

while the list is less than optimal (?)
    compute the current path length
    swap two random points and compute new path length
    if the path length is shorter
        keep the move
        add number to number of successful paths
    else

if max iterations is reached and the number of successful paths is still zero, the solution has been found
	


		